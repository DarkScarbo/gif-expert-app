{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","ctgs","type","value","onChange","target","required","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"qNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAU9C,OACI,0BAAMC,SAPS,SAACC,GACpBA,EAAEC,iBACFJ,EAAWK,OAAOC,OAAS,GAAKR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtEN,EAAc,MAKR,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAbc,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,QAc5CG,UAAQ,MChBTC,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjC,OACI,yBAAKC,UAAU,0CACZ,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCPHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAWF,GAD/C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QARvB,kBAYZY,GAZY,4CAAH,sDCKPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B2B,KAAM,GACNQ,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLV,KAAMa,EACNL,SAAS,MAEd,UAEb,CAACd,IAEIe,EDd2BM,CAAarB,GAAjCW,EAFuB,EAE7BL,KAAcQ,EAFe,EAEfA,QAEtB,OACI,oCACI,wBAAIlB,UAAU,qCAAqCI,GAClDc,GAAW,uBAAGlB,UAAU,oCAAb,cACZ,yBAAKA,UAAW,aAEXe,EAAOH,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eACEa,IAAMb,EAAIC,IACLD,UEbZc,EAAe,SAAC,GAAuD,IAAD,IAApDC,yBAAoD,MAAhC,CAAC,SAAU,eAAqB,IAE3C7C,mBAAS6C,GAFkC,mBAExEC,EAFwE,KAE5D/C,EAF4D,KAI/E,OACI,oCACI,4CACA,kBAAE,EAAF,CAAcA,cAAeA,IAC7B,6BAEA,4BACK+C,EAAWjB,KAAI,SAAAR,GAAQ,OACxB,kBAAC,EAAD,CAASsB,IAAMtB,EAAUA,SAAWA,UCXpD0B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f551d2f4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Proptypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputChange = (e) => setInputValue(e.target.value);\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    inputValue.trim().length > 0 && setCategories(ctgs => [inputValue, ...ctgs]);\n    setInputValue(\"\")\n  };\n\n    return (\n        <form onSubmit={handleSubmit}>\n          <input\n              type=\"text\"\n              value={inputValue}\n              onChange={handleInputChange}\n              required\n          /> \n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n  setCategories: Proptypes.func.isRequired\n }","import React from 'react'\nimport PropTypes from 'prop-types';\n\nexport const GifGridItem = ({ title, url }) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n           <img src={ url } alt={ title }/>\n           <p>{ title }</p>\n        </div>\n    )\n}\n\nGifGridItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n}\n","export const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=pDdzlNkq7Chs8di1kTPE2htOWNsXufzS`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id, \n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n       \n    })\n    return gifs;\n}","import React from 'react';\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport PropTypes from 'prop-types';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3> \n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>} \n            <div className= \"card-grid\">\n          \n                {images.map((img) => (\n                  <GifGridItem \n                    key={ img.id } \n                    { ...img }/>\n                ))}\n        \n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n    category: PropTypes.string.isRequired\n}","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setTimeout(() => {\n                    setState({\n                        data: imgs,\n                        loading: false\n                    });\n                }, 750)\n            });\n    },[category])\n\n    return state\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\nimport PropTypes from 'prop-types';\n\nexport const GifExpertApp = ( {defaultCategories = [\"Rupaul\", \"Miss Vanjie\"]} ) => {\n\n    const [categories, setCategories] = useState(defaultCategories);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            < AddCategory setCategories={setCategories}/>\n            <hr/>\n\n            <ol>\n                {categories.map(category => (\n                <GifGrid key= {category} category= {category}/>\n                ))\n            }\n            </ol>\n        </>\n    )\n}\n\nGifExpertApp.propTypes = {\n    categories: PropTypes.array\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'animate.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}